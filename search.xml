<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Centos7 安装python3.x</title>
      <link href="2021-01/Centos7-%E5%AE%89%E8%A3%85python3-x/"/>
      <url>2021-01/Centos7-%E5%AE%89%E8%A3%85python3-x/</url>
      
        <content type="html"><![CDATA[<p>Centos自带的是2.x的python，升级到3.x的版本</p><hr><p>下载python 官网地址:<a href="https://www.python.org/">https://www.python.org/</a></p><p>这里使用3.7版本的python</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#在Linux中运行</span><br><span class="line">wget https:&#x2F;&#x2F;www.python.org&#x2F;ftp&#x2F;python&#x2F;3.7.3&#x2F;Python-3.7.3.tgz</span><br><span class="line"></span><br><span class="line">#解压 x.x.x是你的版本</span><br><span class="line">tar -xzvf Python-x.x.x.tgz </span><br><span class="line"></span><br><span class="line">#安装 其他python需要的包</span><br><span class="line">yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc  libffi-devel</span><br><span class="line"></span><br><span class="line">#编译安装 进入解压之后的python目录中</span><br><span class="line"># --prefix 指定安装位置</span><br><span class="line"># --enable-shared 共享库</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;python3.7 --enable-shared</span><br><span class="line"></span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>make install之后 使用命令  echo $?</p><p>终端输出0就是没错。如果不是0就是有报错</p><p>没有报错的话。在/usr/local/ 中会有python3.7目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#安装完成之后</span><br><span class="line">make clean</span><br></pre></td></tr></table></figure><p><strong>备份系统自带的python2</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv &#x2F;usr&#x2F;bin&#x2F;python &#x2F;usr&#x2F;bin&#x2F;python.bak</span><br></pre></td></tr></table></figure><p><strong>创建python3的软连接</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ln -s &#x2F;usr&#x2F;local&#x2F;python3.7&#x2F;bin&#x2F;python3.7 &#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"></span><br><span class="line">#检验一下 --如果是3.7版本就是成功了</span><br><span class="line">python -v</span><br></pre></td></tr></table></figure><p><strong>如果有报共享库错误，或者找不到xxx.lib文件</strong></p><h3 id="使用ldconfig命令"><a href="#使用ldconfig命令" class="headerlink" title="使用ldconfig命令"></a>使用ldconfig命令</h3><p>​    ldconfig /usr/local/python3.7/lib<br>​    即可</p><h3 id="因为python升级了，yum也需要改一下配置"><a href="#因为python升级了，yum也需要改一下配置" class="headerlink" title="因为python升级了，yum也需要改一下配置"></a>因为python升级了，yum也需要改一下配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;usr&#x2F;bin&#x2F;yum</span><br><span class="line">vim &#x2F;usr&#x2F;libexec&#x2F;urlgrabber-ext-down</span><br></pre></td></tr></table></figure><p>将开头的#/usr/bin/python 改为/usr/bin/python2</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言：指针</title>
      <link href="2021-01/C%E8%AF%AD%E8%A8%80%EF%BC%9A%E6%8C%87%E9%92%88/"/>
      <url>2021-01/C%E8%AF%AD%E8%A8%80%EF%BC%9A%E6%8C%87%E9%92%88/</url>
      
        <content type="html"><![CDATA[<blockquote><p>学习数据结构顺带记下。</p></blockquote><h3 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h3><p>指针也可以理解为一个数据类型。指针类型，他不是一个具体的值，他保存的是一个地址。这个地址保存了其他的数据。（有点抽象）</p><p>可以这么理解。一个数组的下标就是地址。数组里面的值，才是保存的值。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> *b = &amp;a;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d\n&quot;</span>,a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;b=%d\n&quot;</span>,*b);</span><br><span class="line"></span><br><span class="line">    *b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d\n&quot;</span>,a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;b=%d\n&quot;</span>,*b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">--------------------输出结果——--------------</span><br><span class="line">a=<span class="number">10</span></span><br><span class="line">b=<span class="number">10</span></span><br><span class="line">a=<span class="number">20</span></span><br><span class="line">b=<span class="number">20</span></span><br></pre></td></tr></table></figure><p>可以看到，<em>b赋值20的时候，a也变为20了。\</em>b指向了a的地址。当改变b的值时，改变的是*b指向的地址那里的值。</p><ul><li><strong>“ &amp;（取址运算符）”:  取出变量的地址</strong></li><li>*<em>“ <em>+变量名 “ :  指针</em></em></li></ul><h3 id="指针与函数"><a href="#指针与函数" class="headerlink" title="指针与函数"></a>指针与函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">(<span class="keyword">int</span> temp)</span></span>&#123;</span><br><span class="line">    temp=<span class="number">999</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test2</span><span class="params">(<span class="keyword">int</span> *temp)</span></span>&#123;</span><br><span class="line">    temp=<span class="number">999</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">10</span>;</span><br><span class="line">    </span><br><span class="line">    test1(a);</span><br><span class="line">    test2(&amp;b);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d b=%d&quot;</span>,a,b);</span><br><span class="line">&#125;</span><br><span class="line">--------------输出-------------</span><br><span class="line">a=<span class="number">10</span> b=<span class="number">999</span></span><br></pre></td></tr></table></figure><p>test1函数，并没有改变a的值。因为test1的temp是一个临时变量，改变的只是temp的值。</p><p>test2函数，是用指针来接收b的地址，修改了值之后，修改的是b位置的值。</p><h3 id="指针与数组"><a href="#指针与数组" class="headerlink" title="指针与数组"></a>指针与数组</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ary_set</span><span class="params">(<span class="keyword">int</span> v[],<span class="keyword">int</span> n ,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v[i]=val;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> a[]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> *p = a;</span><br><span class="line">    ary_set(&amp;a[<span class="number">2</span>],<span class="number">5</span>,<span class="number">99</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\na[%d] = %d  *(p+i)=%d&quot;</span>,i,a[i],*(p+i));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">=========输出-=================</span><br><span class="line">a[<span class="number">0</span>] = <span class="number">1</span>  *(p+i)=<span class="number">1</span></span><br><span class="line">a[<span class="number">1</span>] = <span class="number">2</span>  *(p+i)=<span class="number">2</span></span><br><span class="line">a[<span class="number">2</span>] = <span class="number">99</span>  *(p+i)=<span class="number">99</span></span><br><span class="line">a[<span class="number">3</span>] = <span class="number">99</span>  *(p+i)=<span class="number">99</span></span><br><span class="line">a[<span class="number">4</span>] = <span class="number">99</span>  *(p+i)=<span class="number">99</span></span><br><span class="line">a[<span class="number">5</span>] = <span class="number">99</span>  *(p+i)=<span class="number">99</span></span><br><span class="line">a[<span class="number">6</span>] = <span class="number">99</span>  *(p+i)=<span class="number">99</span></span><br><span class="line">a[<span class="number">7</span>] = <span class="number">0</span>  *(p+i)=<span class="number">0</span></span><br></pre></td></tr></table></figure><ol><li>*p = a，指向 a[0]的地址  相当于  *p = &amp;a[0]。</li><li>p+1 = a[0+1]</li><li>思考：可以看到 数组只有5位，但是我们是从下标2开始赋值99，后面下标为6的值也为99。6已经超过了我们的数组长度。</li></ol>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Meta 的标签理解总结- Html</title>
      <link href="2021-01/Meta-%E7%9A%84%E6%A0%87%E7%AD%BE%E7%90%86%E8%A7%A3%E6%80%BB%E7%BB%93-Html/"/>
      <url>2021-01/Meta-%E7%9A%84%E6%A0%87%E7%AD%BE%E7%90%86%E8%A7%A3%E6%80%BB%E7%BB%93-Html/</url>
      
        <content type="html"><![CDATA[<p>这俩天在搜索自己博客的时候，发现只有自己网页显示的内容。但是看了一下别人网页的首页和我一样没什么信息。但是在搜索引擎搜索的时候却有很多没看到的信息显示在上面。于是看了一下网页的源代码。发现搜索引擎出来的数据都是在meta标签中。于是重新去看了一下html的meta标签。</p><p>在之前的理解中，meta只有这个作用</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="MDN中"><a href="#MDN中" class="headerlink" title="MDN中"></a>MDN中</h2><blockquote><p><strong>HTML meta 元素</strong>表示那些不能由其它HTML元相关元素 (style, base, link, script, title)之一表示的任何元数据信息。</p></blockquote><p>其中 meta 中文名 也叫 元数据（Metadata)</p><hr><h2 id="用处"><a href="#用处" class="headerlink" title="用处"></a>用处</h2><p>meta 元素可提供有关页面的元信息（meta-information），比如针对搜索引擎和更新频度的描述和关键词。</p><hr><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><h3 id="必要属性"><a href="#必要属性" class="headerlink" title="必要属性"></a>必要属性</h3><p><a href="https://imgchr.com/i/dEPgun"><img src="https://s1.ax1x.com/2020/08/16/dEPgun.md.png" alt="dEPgun.md.png"></a></p><h3 id="可选属性"><a href="#可选属性" class="headerlink" title="可选属性"></a>可选属性</h3><p><a href="https://imgchr.com/i/dEP2Bq"><img src="https://s1.ax1x.com/2020/08/16/dEP2Bq.md.png" alt="dEP2Bq.md.png"></a></p><hr><h4 id="name-属性"><a href="#name-属性" class="headerlink" title="name 属性"></a>name 属性</h4><ol><li><p>application-name，定义运行在该网页上的网络应用名称</p><p>这个没试过，就不写例子了。防止耽误人。</p></li></ol><ol start="2"><li><p>author，这个网页的作者。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;author&quot;</span> <span class="attr">content</span>=<span class="string">&quot;yvenxx&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p>description，包含网页中的精简的描述，网站的主要内容是什么，其中Firefox和Opera，将其用作书签的描述。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;yven的个人博客，写一写技术总结，存放一些个人作品&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p>keywords，搜索引擎所提取网页关键字。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;yven，博客，后端，java&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ol start="5"><li><p>rebots，定义搜索引擎蜘蛛的的索引方式。告诉它哪些要索引哪些不要索引（值有很多）</p><p>值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.index----允许蜘蛛索引页面,也就是索引此页面。</span><br><span class="line">2.noindex----防止蜘蛛索引该页面</span><br><span class="line">3.follow----允许蜘蛛通过此页面的链接。索引其他页面。</span><br><span class="line">4.nofollow----防止蜘蛛索引此页面上的链接。</span><br><span class="line">5.noodp----禁止将Open Directory Project的描述，用作搜索引擎结果页面中页面的描述</span><br><span class="line">6.noarchive----防止搜索引擎缓存页面的内容</span><br><span class="line">7.nocache----与noarchive相同。</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;rebots&quot;</span> <span class="attr">content</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ol start="6"><li><p>viewport，提供有关视图的初始大小，但仅对移动设备生效。</p><p>值</p><p><a href="https://imgchr.com/i/dEPRH0"><img src="https://s1.ax1x.com/2020/08/16/dEPRH0.md.png" alt="dEPRH0.md.png"></a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ol start="7"><li><p>copyright，版权信息</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;copyright&quot;</span> <span class="attr">content</span>=<span class="string">&quot;yvenxx&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ol start="8"><li><p>revisit-after，设置蜘蛛重新访问的时间</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;revisit-after&quot;</span> <span class="attr">content</span>=<span class="string">&quot;2 days&quot;</span> &gt;</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="http-equiv属性–特定的Http头部"><a href="#http-equiv属性–特定的Http头部" class="headerlink" title="http-equiv属性–特定的Http头部"></a>http-equiv属性–特定的Http头部</h4><ol><li><p>content-type ,使用这个属性，值必须是”<code>text/html; charset=utf-8</code>“。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;content-type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span></span></span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p>x-ua-compatible，如果指定内容属性值必须为 IE=edge</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;x-ua-compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge,chrome=1&quot;</span>&gt;</span>//指定ie和chrome渲染当前页</span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p>refresh，指定网页自动载入页面的时间间隔。有俩种用法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1，如果content只包含一个正整数，就是重新载入网页的时间。</span><br><span class="line">2，如果content包含了一个正整数，外加 ;url=xxxxx 则是重定向到那个网页的间隔时间。</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">content</span>=<span class="string">&quot;2;url=http://yvenxx.cn&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中还有部分的属性没有提到，还没有完全的了解。把常用的一些属性总结在了里面。</p><p>如果文章有错误的地方，希望各位指正。感谢。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
